import os
from datetime import datetime
from github import Github

# Authenticate using GitHub Actions' built-in token
token = os.environ["GITHUB_TOKEN"]
g = Github(token)
repo = g.get_repo(os.environ["GITHUB_REPOSITORY"])

# Read Tasks.md to identify blocked tasks
with open("Tasks.md", "r") as file:
    lines = file.readlines()

blocked_tasks = []
for line in lines:
    if "[Blocked]" in line:
        task_id = line.split(":")[0].strip("- ").strip()
        description = line.split(":")[1].split("[Blocked]")[0].strip()
        blocked_tasks.append((task_id, description))

issue_title = "ðŸš¨ Current Blockers"
existing_issues = repo.get_issues(state='open')

# Check if the issue already exists
blocker_issue = None
for issue in existing_issues:
    if issue.title == issue_title:
        blocker_issue = issue
        break

today = datetime.utcnow().strftime('%Y-%m-%d')

if blocked_tasks:
    body = f"ðŸš¨ **Current Blockers as of {today}**\n\n"
    body += "| Task ID | Description |\n| ------- | ----------- |\n"
    for tid, desc in blocked_tasks:
        body += f"| {tid} | {desc} |\n"
    body += "\n*Generated by automated daily blocker check.*"

    if blocker_issue:
        blocker_issue.edit(body=body)
    else:
        repo.create_issue(title=issue_title, body=body)
else:
    if blocker_issue:
        blocker_issue.edit(state='closed')
